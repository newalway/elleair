<?php

namespace ProjectBundle\Repository;

//use Gedmo\Tree\Entity\Repository\NestedTreeRepository;
#extends \Doctrine\ORM\EntityRepository

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr;
use Symfony\Component\Intl\Locale;

/**
 * NewsCategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NewsCategoryRepository extends \Doctrine\ORM\EntityRepository
{
	private $qb;

	public function findAllData($arr_query_data=false, $locale=false)
    {
		$locale = ($locale) ? $locale : Locale::getDefault();

		$this->qb = $this->createQueryBuilder('n');
		//join translation
		$this->qb->select('n', 'nt')
				->join('n.translations', 'nt')
				->where("nt.locale = '$locale'")
				->orderBy('n.position', 'ASC')
				->addOrderBy('n.createdAt', 'DESC');

		$this->setSearchData($arr_query_data);

  		return $this->qb;
    }


	public function findAllActiveDataById($id)
	{
		// $locale = ($locale) ? $locale : Locale::getDefault();

		$qb = $this->findAllData();
		//join translation
		$qb->andWhere('n.id ', 'id')
		->setParameter('id', $id);
		// 		->join('n.translations', 'nt')
		// 		->where("nt.locale = '$locale'")
		// 		->orderBy('n.position', 'ASC')
		// 		->addOrderBy('n.createdAt', 'DESC');

		// $this->setSearchData($arr_query_data);

		return $qb;
	}

	protected function setSearchData($arr_query_data)
	{
  		if(isset($arr_query_data['q'])){
			//search from translation
  			$this->qb->where($this->qb->expr()->orX(
	  	      	$this->qb->expr()->like('nt.title', ':query')
			))
  			->setParameter('query', '%'.$arr_query_data['q'].'%');
  		}
	}
}
