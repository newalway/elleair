<?php

namespace ProjectBundle\Repository;
use Symfony\Component\Intl\Locale;

/**
 * OurBrandRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OurBrandRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllData($arr_query_data=false)
    {
        $qb = $this->createQueryBuilder('o')
                ->select('o', 'ot')
                ->join('o.translations', 'ot')
                ->addOrderBy('o.position', 'ASC')
                ->addOrderBy('o.createdAt', 'DESC');

        if(isset($arr_query_data['q']) && $arr_query_data['q']){
            $qb->where($qb->expr()->orX(
                $qb->expr()->like('ot.title', ':query'),
                $qb->expr()->like('ot.shortDesc', ':query'),
                $qb->expr()->like('ot.description', ':query')
            ))
            ->setParameter('query', '%'.$arr_query_data['q'].'%');
        }

        return $qb;
    }

    public function findAllActiveData($locale=false)
    {
        $locale = ($locale) ? $locale : Locale::getDefault();
        $qb = $this->findAllData();
        $qb->andWhere($qb->expr()->andX(
            $qb->expr()->like('o.status', ':status'),
            $qb->expr()->like('ot.locale', ':locale')
        ))
        ->setParameters(array(
            'status' => 1,
            'locale' => $locale
        ))
        ;

        return $qb;
    }

    public function getActiveDataById($id,$locale=false)
    {
        $locale = ($locale) ? $locale : Locale::getDefault();
        $qb = $this->findAllActiveData();

        $qb->andWhere($qb->expr()->andX(
            $qb->expr()->like('o.id', ':id')
        ))
        ->setParameter('id',$id)
        ;
        return $qb;
    }
}
