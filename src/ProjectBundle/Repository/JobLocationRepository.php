<?php

namespace ProjectBundle\Repository;

use Doctrine\ORM\Query\Expr;
use Symfony\Component\Intl\Locale;

/**
 * JobLocationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class JobLocationRepository extends \Doctrine\ORM\EntityRepository
{
    private $qb;

    public function findAllData($arr_query_data=false, $locale=false)
    {
        $locale = ($locale) ? $locale : Locale::getDefault();

        $this->qb = $this->createQueryBuilder('jl');
        //join translation
        $this->qb->join('jl.translations', 'jlt')
                ->select('jl', 'jlt')
                ->where("jlt.locale = '$locale'")
                ->orderBy('jl.position', 'ASC')
                ->addOrderBy('jl.createdAt', 'DESC');

        $this->setSearchData($arr_query_data);

        return $this->qb;
    }

    public function findAllDataActive($arr_query_data=false, $locale=false)
    {
        $locale = ($locale) ? $locale : Locale::getDefault();

        $this->findAllData($arr_query_data,$locale);
            $this->qb->andWhere('jl.status = 1');

        return $this->qb;
    }




    protected function setSearchData($arr_query_data)
    {
        if(!isset($arr_query_data)){
            $q = $arr_query_data['q'];
            if($q){
                //search from translation
                $this->qb->where($this->qb->expr()->orX(
                    $this->qb->expr()->like('jlt.title', ':query')
                ))
                ->setParameter('query', '%'.$q.'%');
            }
        }

    }
}
