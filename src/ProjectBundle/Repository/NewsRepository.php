<?php

namespace ProjectBundle\Repository;
use Symfony\Component\Intl\Locale;
/**
 * NewsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NewsRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllData($arr_query_data=false)
    {
        $qb = $this->createQueryBuilder('n')
                ->select('n', 'nt')
                ->join('n.translations', 'nt')
                ->orderBy('n.isHighlight', 'DESC')
                ->addOrderBy('n.position', 'ASC')
                ->addOrderBy('n.publicDate', 'DESC')
                ->addOrderBy('n.createdAt', 'DESC');

        if(isset($arr_query_data['q']) && $arr_query_data['q']){
            $qb->where($qb->expr()->orX(
                $qb->expr()->like('nt.title', ':query'),
                $qb->expr()->like('nt.shortDesc', ':query'),
                $qb->expr()->like('nt.description', ':query')
            ))
            ->setParameter('query', '%'.$arr_query_data['q'].'%');
        }

        if(isset($arr_query_data['is_highlight'])){
            $qb->andWhere('n.isHighlight = '.$arr_query_data['is_highlight']);
        }

        return $qb;
    }

    public function findAllActiveData($cate_id=false,$locale=false)
    {
        $locale = ($locale) ? $locale : Locale::getDefault();
        $qb = $this->findAllData();
        $qb->andWhere($qb->expr()->andX(
            $qb->expr()->like('n.status', ':status'),
            $qb->expr()->lte('n.publicDate', ':publicdate'),
            $qb->expr()->like('nt.locale', ':locale')
        ))
        ->setParameter('status',1)
        ->setParameter('publicdate',date('Y-m-d'))
        ->setParameter('locale',$locale);

        if($cate_id){
            $qb->join('n.newsCategorys', 'nc');
            $qb->join('nc.translations', 'nct');
            $qb->andWhere($qb->expr()->andX(
                $qb->expr()->like('nc.id', ':cate_id')
            ))
            ->setParameter('cate_id',$cate_id);
        }

        return $qb;
    }
    public function findAllActiveDataByNewsId($id=false)
    {
        $qb = $this->findAllData();
        $qb->andWhere($qb->expr()->andX(
            $qb->expr()->like('n.status', ':status'),
            $qb->expr()->lte('n.publicDate', ':publicdate')
        ))
        ->setParameter('status',1)
        ->setParameter('publicdate',date('Y-m-d'));

        if($id){
            $qb->andWhere($qb->expr()->andX(
                $qb->expr()->eq('n.id', ':id')
            ))
            ->setParameter('id',$id);
        }

        return $qb;
    }

    public function findAllActiveDataIsTop()
    {
        $qb = $this->findAllActiveData();
        $qb->andWhere('n.isHighlight = 1');
        return $qb;
    }

    public function getActiveDataByRecent($id)
    {
        $qb = $this->findAllActiveData();
        $qb->andWhere($qb->expr()->andX(
            $qb->expr()->notLike('n.id', ':id')
        ))
        ->setParameter('id', $id);
        return $qb;
    }

    public function getActiveDataById($id,$locale=false)
    {
        $locale = ($locale) ? $locale : Locale::getDefault();

        $qb = $this->findAllActiveData();


        $qb->andWhere($qb->expr()->andX(
            $qb->expr()->like('n.id', ':id')
        ))
        ->setParameter('id',$id)
        ;
        return $qb;
    }

    public function findAllActiveDataByOurBrandId($our_brand_id)
    {
        $qb = $this->findAllActiveData();
        $qb->andWhere($qb->expr()->andX(
            $qb->expr()->eq('n.ourBrand', ':our_brand_id')
        ))
        ->setParameter('our_brand_id',$our_brand_id);
        return $qb;
    }
}
